{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green116\blue0;\red0\green0\blue0;\red63\green110\blue116;
\red38\green71\blue75;\red28\green0\blue207;\red170\green13\blue145;\red196\green26\blue22;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c45600\c0;\csgenericrgb\c0\c0\c0;\csgenericrgb\c24700\c43100\c45600;
\csgenericrgb\c14900\c27800\c29400;\csgenericrgb\c11000\c0\c81000;\csgenericrgb\c66500\c5200\c56900;\csgenericrgb\c77000\c10200\c8600;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab543
\pard\tx543\pardeftab543\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \CocoaLigature0 //top\cf3 \
                newPoint.\cf4 y\cf3  = (*objListIter).\cf5 getLoc\cf3 ().\cf4 y\cf3  - \cf6 1\cf3 ;\cf2 //set our bottom wall just above\cf3 \
                \cf7 if\cf3 (incomingRoom->\cf5 isHall\cf3 ())\
                    newPoint.\cf4 x\cf3  = (*objListIter).\cf5 getLoc\cf3 ().\cf4 x\cf3  + (\cf4 _theRandomHandler\cf3 ->\cf5 getNumber\cf3 (\cf8 "roomWidthGen"\cf3 ) / \cf6 2\cf3 );\cf2 //set right wall to half room width to right of door\cf3 \
                \cf7 else\cf3 \
                    newPoint.\cf4 x\cf3  = (*objListIter).\cf5 getLoc\cf3 ().\cf4 x\cf3  + (\cf4 HALL_SIZE\cf3  / \cf6 2\cf3 );\cf2 //set right wall to just right of door\cf3 \
                newRoom->\cf5 getRect\cf3 ()->\cf5 setBotRight\cf3 (newPoint);\
                \
                newPoint.\cf4 y\cf3  -= \cf4 _theRandomHandler\cf3 ->\cf5 getNumber\cf3 (\cf8 "roomHeightGen"\cf3 );\
                \cf7 if\cf3 (incomingRoom->\cf5 isHall\cf3 ())\
                    newPoint.\cf4 x\cf3  = (*objListIter).\cf5 getLoc\cf3 ().\cf4 x\cf3  - (\cf4 _theRandomHandler\cf3 ->\cf5 getNumber\cf3 (\cf8 "roomWidthGen"\cf3 ) / \cf6 2\cf3 );\cf2 //set left wall to half room width to left of door\cf3 \
                \cf7 else\cf3 \
                    newPoint.\cf4 x\cf3  -= \cf4 HALL_SIZE\cf3 ;\cf2 //set left wall to just left of door\cf3 \
                newRoom->\cf5 getRect\cf3 ()->\cf5 setTopLeft\cf3 (newPoint);\
                \
                \cf2 //create a new door adjacent to the door we found, then connect it to incomingRoom\cf3 \
                newPoint = (*objListIter).\cf5 getLoc\cf3 ();\
                newPoint.\cf4 y\cf3 --;\
                newRoom->\cf5 addDoor\cf3 (\cf4 WALL_BOT\cf3 , newPoint, incomingRoom);\
                \
                \cf2 //set up wall(s) for adding the next door, for the next iteration of createRoom\cf3 \
                \cf7 if\cf3 (incomingRoom->\cf5 isHall\cf3 ())\
                    goodWallForDoor[\cf4 WALL_BOT\cf3 ] = \cf7 false\cf3 ;\
                \cf7 else\cf3 \
                    newDoorWall = newRoom->\cf5 getRect\cf3 ()->\cf5 getFacingWall\cf3 (\cf4 WALL_BOT\cf3 );\
            \
                \cf2 //right\cf3 \
                newPoint.\cf4 x\cf3  = (*objListIter).\cf5 getLoc\cf3 ().\cf4 x\cf3  + \cf6 1\cf3 ;\cf2 //set our left wall just to its right\cf3 \
                \cf7 if\cf3 (incomingRoom->\cf5 isHall\cf3 ())\
                    newPoint.\cf4 y\cf3  = (*objListIter).\cf5 getLoc\cf3 ().\cf4 y\cf3  - (\cf4 _theRandomHandler\cf3 ->\cf5 getNumber\cf3 (\cf8 "roomHeightGen"\cf3 ) / \cf6 2\cf3 );\cf2 //set top wall to half room height above door\cf3 \
                \cf7 else\cf3 \
                    newPoint.\cf4 y\cf3  = (*objListIter).\cf5 getLoc\cf3 ().\cf4 y\cf3  - (\cf4 HALL_SIZE\cf3  / \cf6 2\cf3 );\cf2 //set top wall just above the door\cf3 \
                newRoom->\cf5 getRect\cf3 ()->\cf5 setTopLeft\cf3 (newPoint);\
                \
                newPoint.\cf4 x\cf3  += \cf4 _theRandomHandler\cf3 ->\cf5 getNumber\cf3 (\cf8 "roomWidthGen"\cf3 );\
                \cf7 if\cf3 (incomingRoom->\cf5 isHall\cf3 ())\
                    newPoint.\cf4 y\cf3  = (*objListIter).\cf5 getLoc\cf3 ().\cf4 y\cf3  + (\cf4 _theRandomHandler\cf3 ->\cf5 getNumber\cf3 (\cf8 "roomHeightGen"\cf3 ) / \cf6 2\cf3 );\cf2 //set bottom wall to half room height below door\cf3 \
                \cf7 else\cf3 \
                    newPoint.\cf4 y\cf3  += \cf4 HALL_SIZE\cf3 ;\cf2 //set top wall just above the door\cf3 \
                newRoom->\cf5 getRect\cf3 ()->\cf5 setBotRight\cf3 (newPoint);\
                \
                \cf2 //create a new door adjacent to the door we found, then connect it to incomingRoom\cf3 \
                newPoint = (*objListIter).\cf5 getLoc\cf3 ();\
                newPoint.\cf4 x\cf3 ++;\
                newRoom->\cf5 addDoor\cf3 (\cf4 WALL_LEFT\cf3 , newPoint, incomingRoom);\
                \
                \cf2 //set up wall(s) for adding the next door, for the next iteration of createRoom\cf3 \
                \cf7 if\cf3 (incomingRoom->\cf5 isHall\cf3 ())\
                    goodWallForDoor[\cf4 WALL_LEFT\cf3 ] = \cf7 false\cf3 ;\
                \cf7 else\cf3 \
                    newDoorWall = newRoom->\cf5 getRect\cf3 ()->\cf5 getFacingWall\cf3 (\cf4 WALL_LEFT\cf3 );\
            \
                \cf2 //bottom\cf3 \
                newPoint.\cf4 y\cf3  = (*objListIter).\cf5 getLoc\cf3 ().\cf4 y\cf3  + \cf6 1\cf3 ;\cf2 //set our top wall just below\cf3 \
                \cf7 if\cf3 (incomingRoom->\cf5 isHall\cf3 ())\
                    newPoint.\cf4 x\cf3  = (*objListIter).\cf5 getLoc\cf3 ().\cf4 x\cf3  - (\cf4 _theRandomHandler\cf3 ->\cf5 getNumber\cf3 (\cf8 "roomWidthGen"\cf3 ) / \cf6 2\cf3 );\cf2 //set left wall to half room width to left of door\cf3 \
                \cf7 else\cf3 \
                    newPoint.\cf4 x\cf3  = (*objListIter).\cf5 getLoc\cf3 ().\cf4 x\cf3  - (\cf4 HALL_SIZE\cf3  / \cf6 2\cf3 );\cf2 //set left wall to just left of door\cf3 \
                newRoom->\cf5 getRect\cf3 ()->\cf5 setTopLeft\cf3 (newPoint);\
                \
                newPoint.\cf4 y\cf3  += \cf4 _theRandomHandler\cf3 ->\cf5 getNumber\cf3 (\cf8 "roomHeightGen"\cf3 );\
                \cf7 if\cf3 (incomingRoom->\cf5 isHall\cf3 ())\
                    newPoint.\cf4 x\cf3  = (*objListIter).\cf5 getLoc\cf3 ().\cf4 x\cf3  + (\cf4 _theRandomHandler\cf3 ->\cf5 getNumber\cf3 (\cf8 "roomWidthGen"\cf3 ) / \cf6 2\cf3 );\cf2 //set left wall to half room width to left of door\cf3 \
                \cf7 else\cf3 \
                    newPoint.\cf4 x\cf3  += \cf4 HALL_SIZE\cf3 ;\cf2 //set left wall to just left of door\cf3 \
                newRoom->\cf5 getRect\cf3 ()->\cf5 setBotRight\cf3 (newPoint);\
                \
                \cf2 //create a new door adjacent to the door we found, then connect it to incomingRoom\cf3 \
                newPoint = (*objListIter).\cf5 getLoc\cf3 ();\
                newPoint.\cf4 y\cf3 ++;\
                newRoom->\cf5 addDoor\cf3 (\cf4 WALL_TOP\cf3 , newPoint, incomingRoom);\
                \
                \cf2 //set up wall(s) for adding the next door, for the next iteration of createRoom\cf3 \
                \cf7 if\cf3 (incomingRoom->\cf5 isHall\cf3 ())\
                    goodWallForDoor[\cf4 WALL_TOP\cf3 ] = \cf7 false\cf3 ;\
                \cf7 else\cf3 \
                    newDoorWall = newRoom->\cf5 getRect\cf3 ()->\cf5 getFacingWall\cf3 (\cf4 WALL_TOP\cf3 );}